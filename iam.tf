resource "google_project_iam_custom_role" "app-engine-role" {
  role_id     = "app_engine_role_v2"
  title       = "custom role for app engine v2"
  description = "custom role for app engine v2"
  permissions = [
    "cloudsql.instances.connect",
    "cloudsql.instances.get",
    "storage.buckets.create",
    "storage.buckets.createTagBinding",
    "storage.buckets.delete",
    "storage.buckets.deleteTagBinding",
    "storage.buckets.get",
    "storage.buckets.getIamPolicy",
    "storage.buckets.list",
    "storage.buckets.listTagBindings",
    "storage.buckets.setIamPolicy",
    "storage.buckets.update",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.get",
    "storage.objects.getIamPolicy",
    "storage.objects.list",
    "storage.objects.setIamPolicy",
    "storage.objects.update",
    "compute.addresses.createInternal",
    "compute.addresses.deleteInternal",
    "compute.addresses.get",
    "compute.addresses.list",
    "compute.addresses.useInternal",
    "compute.externalVpnGateways.get",
    "compute.externalVpnGateways.list",
    "compute.externalVpnGateways.use",
    "compute.firewalls.get",
    "compute.firewalls.list",
    "compute.interconnectAttachments.get",
    "compute.interconnectAttachments.list",
    "compute.interconnectLocations.get",
    "compute.interconnectLocations.list",
    "compute.interconnects.get",
    "compute.interconnects.list",
    "compute.interconnects.use",
    "compute.networks.access",
    "compute.networks.get",
    "compute.networks.getEffectiveFirewalls",
    "compute.networks.list",
    "compute.networks.listPeeringRoutes",
    "compute.networks.use",
    "compute.networks.useExternalIp",
    "compute.projects.get",
    "compute.regions.get",
    "compute.regions.list",
    "compute.routers.get",
    "compute.routers.list",
    "compute.routes.get",
    "compute.routes.list",
    "compute.serviceAttachments.get",
    "compute.serviceAttachments.list",
    "compute.subnetworks.get",
    "compute.subnetworks.list",
    "compute.subnetworks.use",
    "compute.subnetworks.useExternalIp",
    "compute.targetVpnGateways.get",
    "compute.targetVpnGateways.list",
    "compute.vpnGateways.get",
    "compute.vpnGateways.list",
    "compute.vpnGateways.use",
    "compute.vpnTunnels.get",
    "compute.vpnTunnels.list",
    "compute.zones.get",
    "compute.zones.list",
    "networkconnectivity.locations.get",
    "networkconnectivity.locations.list",
    "networkconnectivity.operations.get",
    "networkconnectivity.operations.list",
    "networksecurity.authorizationPolicies.get",
    "networksecurity.authorizationPolicies.list",
    "networksecurity.authorizationPolicies.use",
    "networksecurity.clientTlsPolicies.get",
    "networksecurity.clientTlsPolicies.list",
    "networksecurity.clientTlsPolicies.use",
    "networksecurity.locations.get",
    "networksecurity.locations.list",
    "networksecurity.operations.get",
    "networksecurity.operations.list",
    "networksecurity.serverTlsPolicies.get",
    "networksecurity.serverTlsPolicies.list",
    "networksecurity.serverTlsPolicies.use",
    "networkservices.endpointConfigSelectors.get",
    "networkservices.endpointConfigSelectors.list",
    "networkservices.endpointConfigSelectors.use",
    "networkservices.endpointPolicies.get",
    "networkservices.endpointPolicies.list",
    "networkservices.endpointPolicies.use",
    "networkservices.httpFilters.get",
    "networkservices.httpFilters.list",
    "networkservices.httpFilters.use",
    "networkservices.httpfilters.get",
    "networkservices.httpfilters.list",
    "networkservices.httpfilters.use",
    "networkservices.locations.get",
    "networkservices.locations.list",
    "networkservices.operations.get",
    "networkservices.operations.list",
    "resourcemanager.projects.get",
    "servicenetworking.services.get",
    "serviceusage.quotas.get",
    "serviceusage.services.get",
    "serviceusage.services.list"
  ]
}

resource "google_project_service" "hw-service" {
  service                    = "appengineflex.googleapis.com"
  project                    = data.google_project.IDME.project_id
  disable_dependent_services = false
}

resource "google_project_iam_member" "hw-api" {
  role   = google_project_iam_custom_role.app-engine-role.name
  member = "serviceAccount:service-${data.google_project.IDME.number}@gae-api-prod.google.com.iam.gserviceaccount.com"
}
